{"version":3,"sources":["GetDataJson.js","Person.js","AddPersonForm.js","PeopleTable.js","App.js","index.js"],"names":["getDataJson","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","propTypes","PropTypes","string","Person","person","selectFunction","selectedPeople","react_default","createElement","key","id","className","classString","sex","age","concat","century","children","includes","setClassForRow","onClick","born","died","name","mother","father","map","child","join","AddPersonForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormFieldChange","event","_event$target","target","value","replace","setState","defineProperty","state","newPersonName","newPersonSex","newPersonBorn","newPersonDied","newPersonFatherName","newPersonMotherName","newPersonChildren","_this2","type","placeholder","onChange","required","preventDefault","addPersonHandler","React","Component","PeopleTable","addPersonFromProps","people","length","peopleArray","prevState","toConsumableArray","filteredPeople","handleFilterNFM","inputValue","filter","toLowerCase","handleSort","field","sortedArray","sortByField","reverse","sort","b","localeCompare","handleSelect2","index","selectedPersonsIds","findIndex","pID","arrayOfSelected","splice","push","Fragment","src_AddPersonForm","style","borderCollapse","src_Person","App","componentDidMount","array","objectSpread","Math","ceil","selected","isLoaded","handleNewPersonAdd","correctName","correctFatherName","correctMotherName","error","correctSex","correctBorn","correctDied","correctCildrenNames","currYear","Date","getFullYear","makingName","split","part","trim","toUpperCase","slice","undefined","alert","find","prompt","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.a0c1a3cc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst getDataJson = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\ngetDataJson.propTypes = {\n  url: PropTypes.string,\n};\n\nexport default getDataJson;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Person = ({ person, selectFunction, selectedPeople }) => {\n  const setClassForRow = () => {\n    let classString = '';\n\n    classString += person.sex === 'm' ? 'person--male' : 'person--female';\n    classString += person.age > 65 ? ' older65' : '';\n    classString += ` person--lived-in-${person.century}`;\n\n    if (person.children[0]) {\n      classString += person.sex === 'm' ? ' person--father' : ' person--mother';\n    }\n\n    if (selectedPeople.includes(person.id)) {\n      classString += ' selectedRow';\n    }\n\n    return classString;\n  };\n\n  const setClassForName = () => {\n    if (person.born < 1650) {\n      return 'before1650';\n    }\n\n    if (person.died > 1800) {\n      return 'after1800';\n    }\n\n    return '';\n  };\n\n  const handleSelect = (id) => {\n    selectFunction(id);\n  };\n\n  return (\n    <tr\n      key={person.id}\n      className={setClassForRow()}\n      onClick={() => handleSelect(person.id)}\n    >\n      <td>{person.id}.</td>\n      <td className={setClassForName()}>{person.name}</td>\n      <td>{person.sex === 'm' ? 'Male' : 'Female'}</td>\n      <td>{person.born >= 0 ? person.born : `${person.born * -1} BC`}</td>\n      <td>{person.died >= 0 ? person.died : `${person.died * -1} BC`}</td>\n      <td>{person.age}</td>\n      <td>{person.century}-th</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.children[0]\n        ? person.children.map(child => child.name).join(', ')\n        : null}\n      </td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.array,\n  }),\n  selectFunction: PropTypes.func,\n  selectedPeople: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddPersonForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newPersonName: '',\n      newPersonSex: '',\n      newPersonBorn: null,\n      newPersonDied: null,\n      newPersonFatherName: '',\n      newPersonMotherName: '',\n      newPersonChildren: '',\n    };\n  }\n\n  handleFormFieldChange = (event) => {\n    let { name, value } = event.target;\n\n    switch (name) {\n      case 'newPersonBorn':\n      case 'newPersonDied':\n        value = value.replace(/^\\d-/g, '');\n        break;\n      case 'newPersonSex':\n        value = value.replace(/^[^mf]/, '');\n        break;\n      case 'newPersonChildren':\n        value = value.replace(/[^\\wА-Яа-яЁё ,.-]/g, '');\n        break;\n      default: value = value.replace(/[^\\wА-Яа-яЁё .-]/g, '');\n    }\n\n    this.setState(\n      { [name]: value }\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          <legend>New Person Add Form</legend>\n          <div>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                placeholder=\"New person's name\"\n                name=\"newPersonName\"\n                value={this.state.newPersonName}\n                onChange={this.handleFormFieldChange}\n                required\n              />\n            </label>\n\n            <label>Gender: </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"m\"\n                name=\"newPersonSex\"\n                onChange={this.handleFormFieldChange}\n                required\n              />\n              -Male\n            </label>\n\n            <label>\n              <input\n                type=\"radio\"\n                value=\"f\"\n                name=\"newPersonSex\"\n                onChange={this.handleFormFieldChange}\n                required\n              />\n              -Female\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Year of born:\n              <input\n                type=\"number\"\n                value={this.newPersonBorn}\n                name=\"newPersonBorn\"\n                onChange={this.handleFormFieldChange}\n                required\n              />\n            </label>\n\n            <label>\n              Year of death:\n              <input\n                type=\"number\"\n                value={this.newPersonDied}\n                name=\"newPersonDied\"\n                onChange={this.handleFormFieldChange}\n              />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Father:\n              <input\n                type=\"text\"\n                placeholder=\"Person's father's name\"\n                value={this.newPersonFatherName}\n                name=\"newPersonFatherName\"\n                onChange={this.handleFormFieldChange}\n              />\n            </label>\n\n            <label>\n              Mother:\n              <input\n                type=\"text\"\n                placeholder=\"Person's mother's name\"\n                value={this.newPersonMotherName}\n                name=\"newPersonMotherName\"\n                onChange={this.handleFormFieldChange}\n              />\n            </label>\n\n            <label>\n              Children:\n              <input\n                type=\"text\"\n                placeholder=\"Coma separated nmes\"\n                value={this.newPersonChildren}\n                name=\"newPersonChildren\"\n                onChange={this.handleFormFieldChange}\n              />\n            </label>\n          </div>\n          <button onClick={(event) => {\n            event.preventDefault();\n\n            return this.props.addPersonHandler(\n              this.state.newPersonName,\n              this.state.newPersonSex,\n              +this.state.newPersonBorn,\n              +this.state.newPersonDied,\n              this.state.newPersonFatherName,\n              this.state.newPersonMotherName,\n              this.state.newPersonChildren\n            );\n          }}>\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nAddPersonForm.propTypes = {\n  addPersonHandler: PropTypes.func,\n};\n\nexport default AddPersonForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport AddPersonForm from './AddPersonForm';\n\nclass PeopleTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      people: [...this.props.peopleArray],\n      filteredPeople: [...this.props.peopleArray],\n      inputValue: '',\n      sortByField: 'id',\n      selectedPersonsIds: [],\n    };\n  }\n\n  addPersonFromProps = () => {\n    if (this.state.people.length < this.props.peopleArray.length) {\n      this.setState(prevState => (\n        {\n          people: [\n            ...prevState.people,\n            this.props.peopleArray[prevState.people.length],\n          ],\n          filteredPeople: [\n            ...prevState.filteredPeople,\n            this.props.peopleArray[prevState.people.length],\n          ],\n        }\n      ));\n    }\n  }\n\n  handleFilterNFM = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => (\n      {\n        inputValue: value,\n        filteredPeople: prevState.people.filter(person => (\n          person.name.toLowerCase().includes(value.toLowerCase())\n          || (person.father && person.father.toLowerCase().includes(value.toLowerCase()))\n          || (person.mother && person.mother.toLowerCase().includes(value.toLowerCase()))\n        )),\n      })\n    );\n  }\n\n  handleSort = (field) => {\n    let sortedArray = [];\n\n    if (this.state.sortByField === field) {\n      sortedArray = [...this.state.filteredPeople].reverse();\n    } else\n    {\n      switch (typeof(this.state.filteredPeople[0][field])) {\n        case 'string':\n          sortedArray = [...this.state.filteredPeople].sort((a, b) => a[field].localeCompare(b[field]));\n          break;\n        case 'number':\n          sortedArray = [...this.state.filteredPeople].sort((a, b) => a[field] - b[field]);\n          break;\n        case 'boolean':\n          sortedArray = [...this.state.filteredPeople].sort((a, b) => a[field] - b[field]);\n          break;\n        default:\n          sortedArray = [...this.state.filteredPeople];\n      }\n    }\n\n    this.setState(\n      {\n        filteredPeople: [...sortedArray],\n        sortByField: field,\n      }\n    );\n  }\n\n  handleSelect2 = (id) => {\n    const index = this.state.selectedPersonsIds.findIndex(pID => pID === id);\n    const arrayOfSelected = [...this.state.selectedPersonsIds];\n\n    index >= 0 ? arrayOfSelected.splice(index, 1) : arrayOfSelected.push(id);\n\n    this.setState(\n      {\n        selectedPersonsIds: [...arrayOfSelected],\n      }\n    );\n  }\n\n  render() {\n    this.addPersonFromProps();\n\n    return (\n      <>\n        <h1>\n          People table of {this.state.filteredPeople.length} persons\n        </h1>\n\n        <AddPersonForm addPersonHandler={this.props.addPersonHandler}/>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Search by Name and Parents\"\n            value={this.state.inputValue}\n            onChange={this.handleFilterNFM}\n          />\n        </div>\n\n        <table className=\"PeopleTable\" style={{ borderCollapse: \"collapse\" }}>\n          <thead>\n            <tr>\n              <th className=\"clickable\" onClick={() => this.handleSort('id')}>&nbsp;ID&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('name')}>&nbsp;Name&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('sex')}>&nbsp;Gender&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('born')}>&nbsp;Born&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('died')}>&nbsp;Died&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('age')}>&nbsp;Age&nbsp;</th>\n              <th className=\"clickable\" onClick={() => this.handleSort('century')}>&nbsp;Century&nbsp;</th>\n              <th>&nbsp;Mother&nbsp;</th>\n              <th>&nbsp;Father&nbsp;</th>\n              <th>&nbsp;Children&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.filteredPeople.map(person => (\n              <Person person={person} selectFunction={this.handleSelect2} selectedPeople={this.state.selectedPersonsIds} />\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  peopleArray: PropTypes.array,\n}\n\nexport default PeopleTable;\n","import React from 'react';\nimport getDataJson from './GetDataJson';\nimport PeopleTable from './PeopleTable';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      people: [],\n      isLoaded: false,\n    };\n  }\n\n  componentDidMount = async() => {\n    const peopleArray = await getDataJson(\n      'https://mate-academy.github.io/react_people-table/api/people.json'\n    );\n    const people = peopleArray.map((person, index, array) => (\n      {\n        id: index + 1,\n        age: person.died - person.born,\n        century: Math.ceil(person.died / 100),\n        children: array.map(child => (person.name === child.father\n          || person.name === child.mother)\n            ? child\n            : '')\n          .filter(child => child !== ''),\n        selected: false,\n        ...person,\n      }\n    ));\n\n    this.setState(() => (\n      {\n        people: [...people],\n        isLoaded: true,\n      }\n    ));\n  }\n\n  handleNewPersonAdd = (name, sex, born, died, father, mother, children) => {\n    let error = '';\n    let correctName = '';\n    let correctSex = '';\n    let correctBorn = null;\n    let correctDied = null;\n    let correctFatherName = '';\n    let correctMotherName = '';\n    let correctCildrenNames = [];\n\n    const currYear = new Date().getFullYear();\n\n    error += typeof (name) !== 'string' ? 'Incorrect Name Type' : '';\n    error += typeof (sex) !== 'string' ? 'Incorrect Gender Type' : '';\n    error += typeof (born) !== 'number' ? 'Incorrect Born Type' : '';\n    error += typeof (died) !== 'number' ? 'Incorrect Died Type' : '';\n    error += typeof (father) !== 'string' ? 'Incorrect Father Name Type' : '';\n    error += typeof (mother) !== 'string' ? 'Incorrect Mother Name Type' : '';\n    error += typeof (children) !== 'string' ? 'Incorrect Cildren Names Type' : '';\n\n    function makingName(name) {\n      return name.split(' ')\n        .map(part => part.trim().toLowerCase())\n        .filter(part => part !== '')\n        .map(part => part[0].toUpperCase() + part.slice(1))\n        .join(' ');\n    }\n\n    correctName = makingName(name);\n    correctFatherName = makingName(father);\n    correctMotherName = makingName(mother);\n\n    if (children) {\n      correctCildrenNames = children.split(',')\n        .map(name => name.trim())\n        .filter(part => part !== '')\n        .map(name => ({ name: makingName(name) }));\n    }\n\n    if (born > currYear) {\n      error += 'Incorrect Year of Person\\'s born';\n    } else {\n      correctBorn = born;\n    }\n\n    if (died !== 0 && died <= currYear && died >= born && died - born <= 150) {\n      correctDied = died;\n    } else if (died === 0 && died - born <= 150 && died - born >= 0) {\n      correctDied = 0;\n    } else if (died === 0 && currYear - born <= 150) {\n      correctDied = undefined;\n    } else {\n      error += 'Incorrect Year of Person\\'s death';\n    }\n\n    if (sex[0] === 'm' || sex[0] === 'f') {\n      correctSex = sex[0];\n    } else {\n      error += 'Incorrect Gender only \\'Male\\' or \\'Female\\' expected';\n    }\n\n    if (error) {\n      alert(error);\n\n      return;\n    }\n\n    if (this.state.people.find(person => person.name === correctName)) {\n      const flag = prompt(`Person Name ${correctName},\n        you have entered, is already present! Continue?`, 'Yes');\n\n      if (!flag) {\n        return;\n      }\n    }\n\n    this.setState(prevState => (\n      {\n        people: [\n          ...prevState.people,\n          {\n            id: prevState.people.length + 1,\n            name: correctName,\n            sex: correctSex,\n            born: correctBorn,\n            died: correctDied !== undefined\n              ? correctDied\n              : null,\n            age: correctDied !== undefined\n              ? correctDied - correctBorn\n              : currYear - correctBorn,\n            century: correctDied !== undefined\n              ? Math.ceil(correctDied / 100)\n              : 21,\n            father: correctFatherName,\n            mother: correctMotherName,\n            children: correctCildrenNames,\n          },\n        ],\n      }\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLoaded\n          ? <PeopleTable\n              peopleArray={this.state.people}\n              addPersonHandler={this.handleNewPersonAdd}\n            />\n          : <h1>Still Loading...</h1>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}